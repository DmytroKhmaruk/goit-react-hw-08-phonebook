{"version":3,"file":"static/js/409.c5bb0574.chunk.js","mappings":"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","sources":["components/ContactForm/ContactFormStyles.js","components/ContactForm/ContactForm.jsx","components/Contacts/ContactsStyles.js","components/Delete/DeleteStyles.js","components/Delete/Delete.jsx","components/Contacts/Contacts.jsx","components/Filter/FilterStyles.js","components/Filter/Filter.jsx","components/SectionStyled.js","components/pages/ContactsPage.jsx"],"sourcesContent":["import styles from 'styled-components';\n\nconst ContactFormStyles = styles.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  label{\n    display: flex;\n    flex-direction: column;\n  }\n\n  input{\n    padding: 10px 15px;\n    cursor: pointer;\n    border-radius: 8px;\n  }\n\n  button{\n    width: 100px;\n    padding: 10px;\n    border-radius: 8px;\n    cursor: pointer;\n    background-color: #ebebeb;\n    transition: background-color 250ms linear;\n    &:hover{\n        background-color: #a9dde0;\n    }\n    &:active {\n    background-color: #b2eeea;\n  }\n  }\n`;\n\nexport default ContactFormStyles;","import PropTypes from 'prop-types';\nimport ContactFormStyles from './ContactFormStyles';\nimport { useState } from 'react';\n\nfunction ContactForm({ formAddContact }) {\n  const [nameContact, setNameContact] = useState('');\n  const [number, setNumber] = useState('');\n  \n\n  const handleOnChange = evt => {\n    const { name, value } = evt.currentTarget;\n    if (name === 'name') {\n      setNameContact(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleOnSubmit = evt => {\n    evt.preventDefault();\n    formAddContact({ name: nameContact, number });\n    reset();\n  };\n\n  const reset = () => {\n    setNameContact('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <ContactFormStyles onSubmit={handleOnSubmit}>\n        <label>\n          <span>Name</span>\n          <input\n            value={nameContact}\n            type=\"text\"\n            name=\"name\"            \n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleOnChange}\n          />\n        </label>\n        <label>\n          <span>Number</span>\n          <input\n            value={number}\n            type=\"tel\"\n            name=\"number\"            \n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleOnChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </ContactFormStyles>\n    </>\n  );\n}\n\nContactForm.propTypes = {\n  formAddContact: PropTypes.func.isRequired,  \n};\n\nexport default ContactForm;\n","import styles from 'styled-components';\n\nconst ContactsStyles = styles.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding-top: 20px;\n`\nexport default ContactsStyles;","import styles from 'styled-components';\n\nconst DeleteStyles = styles.div`\n    display: flex;\n    gap: 10px;\np{\n    margin:0;\n    padding: 0;\n    font-size: 18px;\n\n}\n\n    button{\n        display: flex;\n        align-items: center;\n        margin: 0;\n        border-radius: 4px;\n        cursor: pointer;\n        border: none;\n    }\n`\n\nexport default DeleteStyles;","import PropTypes from 'prop-types';\nimport { MdDeleteForever } from 'react-icons/md';\nimport DeleteStyles from './DeleteStyles'\n\nconst Delete = ({ id = '', name, number, onRemoveContact, }) => {\n    return(\n        <DeleteStyles key={id}>\n            <p>\n              {name}: {number}\n            </p>\n        <button type='button' onClick={() => onRemoveContact(id)}>\n          <MdDeleteForever/>\n        </button>\n          </DeleteStyles>\n    )\n}\n\nDelete.propTypes={\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onRemoveContact: PropTypes.func.isRequired\n}\n\nexport default Delete","import PropTypes from 'prop-types';\nimport ContactsStyles from './ContactsStyles';\nimport Delete from '../Delete';\n\nfunction Contacts({ filteredContact, onRemoveContact }) {\n  \n  return (\n    <>\n      <ContactsStyles>\n        {filteredContact.map(({ id, name, number }) => {\n          return (\n            <Delete\n              key={id}\n              id={id}\n              name={name}\n              number={number}\n              onRemoveContact={onRemoveContact}\n            />\n          );\n          \n        })}\n      </ContactsStyles>\n    </>\n  );\n}\n\nContacts.propTypes = {\n  filteredContact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onRemoveContact: PropTypes.func.isRequired,  \n};\n\nexport default Contacts;\n","import styles from 'styled-components';\n\nconst FilterStyles = styles.input`\n    padding: 10px 15px;\n    cursor: pointer;\n    border-radius: 8px;\n`\nexport default FilterStyles;","import PropTypes from 'prop-types';\nimport FilterStyles from './FilterStyles';\n\nconst Filter = ({ value, handleOnChangeFilter }) => {\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <FilterStyles\n       type=\"text\"\n       value={value}\n       onChange={handleOnChangeFilter} />\n    </>\n  );\n};\n\nFilter.propTypes = {  \n  handleOnChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 400px;\n  margin: 50px auto 0;\n  display: flex;\n  flex-direction: column;\n`;\n","\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport { Section } from 'components/SectionStyled';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/Slices/contactsSlice';\nimport {\n  addContactThunk,\n  deleteContactThunk,\n  fetchContactThunk,\n} from 'redux/Thunks/contactsThunk';\nimport {\n  selectContacts,\n  selectError,\n  selectFiltered,\n  selectIsLoading,\n} from 'redux/selectors';\n\nexport const ContactsPage = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filtered = useSelector(selectFiltered);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactThunk());\n  }, [dispatch]);\n\n  const formAddContact = contactData => {\n    const isExistingContact = contacts.find(contact => contact.name === contactData.name);\n\n    if (isExistingContact) {\n      alert('This contact already exists!');\n      return;\n    }\n    dispatch(addContactThunk(contactData));\n  };\n\n  const handleOnChangeFilter = evt => {\n    dispatch(filterContact(evt.currentTarget.value));\n  };\n\n  const filteredContact = contacts?.filter(contact =>\n    contact.name.toLowerCase().includes(filtered.toLowerCase())\n  );\n\n  return (\n    <Section>\n      <h1>Phonebook</h1>\n      <ContactForm formAddContact={formAddContact} contactsArr={contacts} />\n      <h2>Contacts</h2>\n      <Filter value={filtered} handleOnChangeFilter={handleOnChangeFilter} />\n      {isLoading && <Loader />}\n      {error && <>Oops... Error: {error}</>}\n      <Contacts\n        filteredContact={filteredContact}\n        onRemoveContact={contactId => {\n          dispatch(deleteContactThunk(contactId));\n        }}\n        value={filtered}\n        handleOnChangeFilter={handleOnChangeFilter}\n      />\n    </Section>\n  );\n};\n\n\nexport default ContactsPage;\n"],"names":["styles","_templateObject","_taggedTemplateLiteral","_ref","formAddContact","_useState","useState","_useState2","_slicedToArray","nameContact","setNameContact","_useState3","_useState4","number","setNumber","handleOnChange","evt","_evt$currentTarget","currentTarget","name","value","reset","_jsx","_Fragment","children","_jsxs","ContactFormStyles","onSubmit","preventDefault","type","pattern","title","required","onChange","_ref$id","id","onRemoveContact","DeleteStyles","onClick","MdDeleteForever","filteredContact","ContactsStyles","map","_ref2","Delete","handleOnChangeFilter","FilterStyles","Section","styled","ContactsPage","contacts","useSelector","selectContacts","isLoading","selectIsLoading","error","selectError","filtered","selectFiltered","dispatch","useDispatch","useEffect","fetchContactThunk","filterContact","filter","contact","toLowerCase","includes","ContactForm","contactData","find","alert","addContactThunk","contactsArr","Filter","Loader","Contacts","contactId","deleteContactThunk"],"sourceRoot":""}